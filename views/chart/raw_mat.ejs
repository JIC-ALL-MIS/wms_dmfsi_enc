<div class="container-fluid">
    <div class="card">
        <div class="card-header">
            <h4 class="card-title">Raw Materials</h4>
        </div>
    </div>
    <div class="row">

        <div class="col-lg-3">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title">Incoming</h4>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <canvas id="myLineChart" width="400" height="400"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-3">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title">Outgoing</h4>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <canvas id="myLineChart1" width="400" height="400"></canvas>
                    </div>
                </div>
            </div>
        </div>

         <div class="col-lg-3">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title">Adjustment</h4>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <canvas id="myLineChart2" width="400" height="400"></canvas>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-3">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title">Transfer</h4>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <canvas id="myLineChart3" width="400" height="400"></canvas>
                    </div>
                </div>
            </div>
        </div>


     
    </div>

</div>



<script>
    // Get the context of the canvas element we want to select
    var ctx = document.getElementById('myLineChart').getContext('2d');
    var ctx1 = document.getElementById('myLineChart1').getContext('2d');
    var ctx2 = document.getElementById('myLineChart2').getContext('2d');
    var ctx3 = document.getElementById('myLineChart3').getContext('2d');

    
    //Raw Material
    function fetchData() {
        // Make an AJAX request
        console.log("1")
        $.ajax({
            url: './raw_line', // Replace 'your_data_endpoint_url_here' with your actual data endpoint URL
            type: 'GET',
            dataType: 'json',
            success: function(response) {
                // On success, update chart with fetched data
                // console.log(response)
                updateChart(response);
            },
            error: function(xhr, status, error) {
                console.error(error);
            }
        });
    }
    function fetchDataOut() {
        // Make an AJAX request
        $.ajax({
            url: './raw_out_line', // Replace 'your_data_endpoint_url_here' with your actual data endpoint URL
            type: 'GET',
            dataType: 'json',
            success: function(response) {
                // On success, update chart with fetched data
                // console.log(response)
                updateChartOut(response);
            },
            error: function(xhr, status, error) {
                console.error(error);
            }
        });
    }
    function fetchDataADJ() {
        // Make an AJAX request
        $.ajax({
            url: './raw_adj_line', // Replace 'your_data_endpoint_url_here' with your actual data endpoint URL
            type: 'GET',
            dataType: 'json',
            success: function(response) {
                // On success, update chart with fetched data
                // console.log(response)
                updateChartADJ(response);
            },
            error: function(xhr, status, error) {
                console.error(error);
            }
        });
    }
    function fetchDataTF() {
        // Make an AJAX request
        $.ajax({
            url: './raw_trf_line', // Replace 'your_data_endpoint_url_here' with your actual data endpoint URL
            type: 'GET',
            dataType: 'json',
            success: function(response) {
                // On success, update chart with fetched data
                // console.log(response)
                updateChartTRF(response);
            },
            error: function(xhr, status, error) {
                console.error(error);
            }
        });
    }


    function updateChart(data) {
        var labels = [];
        var quantities = [];

        // Extract labels and quantities from fetched data
        data.forEach(function(item) {
            
            var dob = new Date(item.date);
            var dobArr = dob.toDateString().split(' ');
            var dobFormat = dobArr[2] + ' ' + dobArr[1] + ' ' + dobArr[3];
            // alert(dobFormat); 
            labels.push(dobFormat);
            quantities.push(item.totalQuantity);
        });

        // Update chart data with fetched data
        myLineChart.data.labels = labels;
        myLineChart.data.datasets[0].data = quantities;

        // Update the chart
        myLineChart.update();
    }
    function updateChartOut(data) {
        var labels = [];
        var quantities = [];

        // Extract labels and quantities from fetched data
        data.forEach(function(item) {
            
            var dob = new Date(item.date);
            var dobArr = dob.toDateString().split(' ');
            var dobFormat = dobArr[2] + ' ' + dobArr[1] + ' ' + dobArr[3];
            // alert(dobFormat); 
            labels.push(dobFormat);
            quantities.push(item.totalQuantity);
        });

        // Update chart data with fetched data
        myLineChart1.data.labels = labels;
        myLineChart1.data.datasets[0].data = quantities;

        // Update the chart
        myLineChart1.update();
    }
    function updateChartADJ(data) {
        var labels = [];
        var quantities = [];

        // Extract labels and quantities from fetched data
        data.forEach(function(item) {
            
            var dob = new Date(item.date);
            var dobArr = dob.toDateString().split(' ');
            var dobFormat = dobArr[2] + ' ' + dobArr[1] + ' ' + dobArr[3];
            // alert(dobFormat); 
            labels.push(dobFormat);
            quantities.push(item.totalQuantity);
        });

        // Update chart data with fetched data
        myLineChart2.data.labels = labels;
        myLineChart2.data.datasets[0].data = quantities;

        // Update the chart
        myLineChart2.update();
    }
    function updateChartTRF(data) {
        var labels = [];
        var quantities = [];

        // Extract labels and quantities from fetched data
        data.forEach(function(item) {
            
            var dob = new Date(item.date);
            var dobArr = dob.toDateString().split(' ');
            var dobFormat = dobArr[2] + ' ' + dobArr[1] + ' ' + dobArr[3];
            // alert(dobFormat); 
            labels.push(dobFormat);
            quantities.push(item.totalQuantity);
        });

        // Update chart data with fetched data
        myLineChart3.data.labels = labels;
        myLineChart3.data.datasets[0].data = quantities;

        // Update the chart
        myLineChart3.update();
    }


    fetchData();
    fetchDataOut();
    fetchDataADJ();
    fetchDataTF();
    var options = {
        responsive: true,
        maintainAspectRatio: false,
        scales: {
            yAxes: [{
                ticks: {
                    beginAtZero: true
                }
            }]
        },
        title: {
            display: true,
            text: 'Chart.js Line Chart'
        }
    };


    var myLineChart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: [],
            datasets: [{
                label: 'Total Quantity',
                backgroundColor: 'rgb(255, 99, 132)',
                borderColor: 'rgb(255, 99, 132)',
                data: [],
                fill: false,
                pointStyle: 'rectRot',
                pointRadius: 5,
                pointBorderColor: 'rgb(0, 0, 0)',
                borderWidth: 1,
            }]
        },
        options: options
    });


    var myLineChart1 = new Chart(ctx1, {
        type: 'line',
        data: {
            labels: [],
            datasets: [{
                label: 'Total Quantity',
                backgroundColor: 'rgb(173, 216, 230)',
                borderColor: 'rgb(173, 216, 230)',
                data: [],
                fill: false,
                pointStyle: 'rectRot',
                pointRadius: 5,
                pointBorderColor: 'rgb(0, 0, 0)',
                borderWidth: 1,
            }]
        },
        options: options
    });

    var myLineChart2 = new Chart(ctx2, {
        type: 'line',
        data: {
            labels: [],
            datasets: [{
                label: 'Total Quantity - ',
                backgroundColor: 'rgb(144, 238, 144)',
                borderColor: 'rgb(144, 238, 144)',
                data: [],
                fill: false,
                pointStyle: 'rectRot',
                pointRadius: 5,
                pointBorderColor: 'rgb(0, 0, 0)',
                borderWidth: 1,
            }]
        },
        options: options
    });

    var myLineChart3 = new Chart(ctx3, {
        type: 'line',
        data: {
            labels: [],
            datasets: [{
                label: 'Total Quantity - ',
                backgroundColor: 'rgb(211, 211, 211)',
                borderColor: 'rgb(211, 211, 211)',
                data: [],
                fill: false,
                pointStyle: 'rectRot',
                pointRadius: 5,
                pointBorderColor: 'rgb(0, 0, 0)',
                borderWidth: 1,
            }]
        },
        options: options
    });


    // function fetchDataAndDrawChart() {
    //         // Make AJAX call to get data
    //         var xhr = new XMLHttpRequest();
    //         xhr.open('GET', './rm_chart', true);
    //         xhr.onload = function () {
    //             if (xhr.status >= 200 && xhr.status < 300) {
    //                 var data = JSON.parse(xhr.responseText);
    //                 drawChart(data);
    //             } else {
    //                 console.error('Failed to fetch data');
    //             }
    //         };
    //         xhr.onerror = function () {
    //             console.error('Failed to fetch data');
    //         };
    //         xhr.send();
    //     }

    // function drawChart(data) {
    //     var ctx = document.getElementById('myChart').getContext('2d');
    //     var myChart = new Chart(ctx, {
    //         type: 'line',
    //         data: {
    //             labels: data.purchases.map(item => item.date),
    //             datasets: [{
    //                 label: 'Purchases',
    //                 data: data.purchases.map(item => item.totalQuantity),
    //                 backgroundColor: 'rgba(255, 99, 132, 0.2)',
    //                 borderColor: 'rgba(255, 99, 132, 1)',
    //                 borderWidth: 1
    //             },
    //             {
    //                 label: 'Sales',
    //                 data: data.sales.map(item => item.totalQuantity),
    //                 backgroundColor: 'rgba(54, 162, 235, 0.2)',
    //                 borderColor: 'rgba(54, 162, 235, 1)',
    //                 borderWidth: 1
    //             },
    //             {
    //                 label: 'Adjustment',
    //                 data: data.adjustment.map(item => item.totalQuantity),
    //                 backgroundColor: 'rgba(255, 206, 86, 0.2)',
    //                 borderColor: 'rgba(255, 206, 86, 1)',
    //                 borderWidth: 1
    //             },
    //             {
    //                 label: 'Transfer',
    //                 data: data.transfer.map(item => item.totalQuantity),
    //                 backgroundColor: 'rgba(75, 192, 192, 0.2)',
    //                 borderColor: 'rgba(75, 192, 192, 1)',
    //                 borderWidth: 1
    //             }]
    //         },
    //         options: {
    //             scales: {
    //                 y: {
    //                     beginAtZero: true
    //                 }
    //             }
    //         }
    //     });
    // }
    // fetchDataAndDrawChart();
    async function fetchDataAndUpdateChart(fetchFunction, chart) {
        const newData = await fetchFunction(); // Fetch data using the provided fetchFunction
        // chart.data = newData;
        // chart.update(); // Update the chart with the new data
        await fetchFunction(); 
    }


    function startDataRefresh() {
        const pollingInterval = 5000;
        // Call fetchDataAndUpdateChart for each data source and its corresponding chart
        setInterval(() => fetchDataAndUpdateChart(fetchData, ctx), pollingInterval);
        setInterval(() => fetchDataAndUpdateChart(fetchDataOut, ctx1), pollingInterval);
        setInterval(() => fetchDataAndUpdateChart(fetchDataADJ, ctx2), pollingInterval);
        setInterval(() => fetchDataAndUpdateChart(fetchDataTF, ctx3), pollingInterval);
    }

    startDataRefresh();
</script>