<!DOCTYPE html>
<html lang="en">

<head>
    <%- include('./partials/head'); -%>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

</head>

<body>
    <!--*******************
        Preloader start
    ********************-->
    <div id="preloader">
        <div class="sk-three-bounce">
            <div class="sk-child sk-bounce1"></div>
            <div class="sk-child sk-bounce2"></div>
            <div class="sk-child sk-bounce3"></div>
        </div>
    </div>
    <!--*******************
        Preloader end
    ********************-->

    <!--**********************************
        Main wrapper start
    ***********************************-->
    <div id="main-wrapper">

        <!--**********************************
            Nav header start
        ***********************************-->
        <%- include('./partials/header_logo'); -%>

            <!--**********************************
            Nav header end
        ***********************************-->

            <!--**********************************
            Header start
        ***********************************-->
            <%- include('./partials/header',{titel:language.dashboard}); -%>

                <!--**********************************
            Header end ti-comment-alt
        ***********************************-->

                <!--**********************************
            Sidebar start
        ***********************************-->
                <%- include('./partials/sidebar'); -%>

                    <!--**********************************
            Sidebar end
        ***********************************-->


                    <!--**********************************
            Content body start
        ***********************************-->
                    <div class="content-body">
                        <div class="container-fluid">
                            <div class="card">
                                <div class="card-header">
                                    <h4 class="card-title">Raw Materials</h4>
                                </div>
                            </div>
                            <div class="row">

                                <!-- <div class="col-xl-3 col-xxl-6 col-lg-6 col-sm-6">
                                    <div class="widget-stat card">
                                        <div class="card-body p-4">
                                            <div class="media ai-icon">
                                                <span class="me-3 bgl-primary text-primary">
                                                    <svg width="32" height="32" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                        <g>
                                                          <g> 
                                                            <path d="M5.52377 7C9.41427 5.74386 13.9724 5.45573 16 5.5C18.0276 5.54427 18.8831 6.2663 19.5 7.5C20.5 9.5 20.289 14.4881 18.5 16.0871C16.712 17.6861 9.33015 17.8381 6.87015 16.0871C4.27115 14.2361 5.629 9.192 5.544 5.743C5.595 3.813 3.5 3.5 3.5 3.5" stroke="#0081EE" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                                                            <path d="M13 10.5H15.773" stroke="#0081EE" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                                                            <path fill-rule="evenodd" clip-rule="evenodd" d="M7.26399 20.1274C7.56399 20.1274 7.80799 20.3714 7.80799 20.6714C7.80799 20.9724 7.56399 21.2164 7.26399 21.2164C6.96299 21.2164 6.71899 20.9724 6.71899 20.6714C6.71899 20.3714 6.96299 20.1274 7.26399 20.1274Z" fill="#0081EE" stroke="#0081EE" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                                                            <path fill-rule="evenodd" clip-rule="evenodd" d="M17.5954 20.1274C17.8964 20.1274 18.1404 20.3714 18.1404 20.6714C18.1404 20.9724 17.8964 21.2164 17.5954 21.2164C17.2954 21.2164 17.0514 20.9724 17.0514 20.6714C17.0514 20.3714 17.2954 20.1274 17.5954 20.1274Z" fill="#0081EE" stroke="#0081EE" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                                                          </g>
                                                        </g>
                                                    </svg>
                                                </span>

                                                <div class="media-body">
                                                    <p class="mb-1"><%= language.sales %></p>
                                                    <% if( sale_QTY == undefined ) { %>

                                                        <% if(master_shop[0].currency_placement == 1) { %>
    
                                                            <h4 class="mb-0"> 0 Qty </h4>
                                                        <% } else { %>
    
                                                            <h4 class="mb-0"> 0 Qty </h4>
                                                        <% } %>
                                                        
                                                    <% } else { %>

                                                        <% if(master_shop[0].currency_placement == 1) { %>
    
                                                            <h4 class="mb-0"> <%= sale_QTY.totalQuantity.toLocaleString() %> Qty </h4>
                                                        <% } else { %>
    
                                                            <h4 class="mb-0"> <%= sale_QTY.totalQuantity.toLocaleString() %> Qty </h4>
                                                        <% } %>

                                                    <% } %>
                                                    
                                                </div>
                                                
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-xl-3 col-xxl-6 col-lg-6 col-sm-6">
                                    <div class="widget-stat card">
                                        <div class="card-body p-4">
                                            <div class="media ai-icon">
                                                <span class="me-3 bgl-warning text-warning">
                                                    <i class="las la-undo"></i>
                                                </span>
                                                <div class="media-body">
                                                    <p class="mb-1"><%= language.sales_return %></p>
                                                    <% if( sales_return == undefined ) { %>

                                                        <% if(master_shop[0].currency_placement == 1) { %>
    
                                                            <h4 class="mb-0"> 0 Qty </h4>
                                                        <% } else { %>
                                                                
                                                            <h4 class="mb-0">  0 Qty </h4>
                                                        <% } %>

                                                    <% } else { %>
                                                            
                                                        <% if(master_shop[0].currency_placement == 1) { %>
    
                                                            <h4 class="mb-0"><%= sales_return_QTY.totalQuantity.toLocaleString() %> Qty</h4>
                                                        <% } else { %>
                                                                
                                                            <h4 class="mb-0">  <%= sales_return_QTY.totalQuantity.toLocaleString() %> Qty </h4>
                                                        <% } %>

                                                    <% } %>

                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-xl-3 col-xxl-6 col-lg-6 col-sm-6">
                                    <div class="widget-stat card">
                                        <div class="card-body  p-4">
                                            <div class="media ai-icon">
                                                <span class="me-3 bgl-danger text-danger">
                                                    <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                        <g> 
                                                          <g> 
                                                            <path d="M15.7499 9.47167V6.43967C15.7549 4.35167 14.0659 2.65467 11.9779 2.64967C9.88887 2.64567 8.19287 4.33467 8.18787 6.42267V9.47167" stroke="#FF0000" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                                                            <path fill-rule="evenodd" clip-rule="evenodd" d="M2.94995 14.2074C2.94995 8.91344 5.20495 7.14844 11.969 7.14844C18.733 7.14844 20.988 8.91344 20.988 14.2074C20.988 19.5004 18.733 21.2654 11.969 21.2654C5.20495 21.2654 2.94995 19.5004 2.94995 14.2074Z" stroke="#FF0000" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                                                          </g>
                                                        </g>
                                                    </svg>
                                                </span>
                                                <div class="media-body">
                                                    <p class="mb-1"><%= language.purchase %></p>

                                                    <% if( purchases == undefined ) { %>

                                                        <% if(master_shop[0].currency_placement == 1) { %>
    
                                                            <h4 class="mb-0"> 0 Qty </h4>
                                                        <% } else { %>
                                                                
                                                            <h4 class="mb-0"> 0 Qty </h4>
                                                        <% } %>

                                                    <% } else { %>
                                                                
                                                        <% if(master_shop[0].currency_placement == 1) { %>
    
                                                            <h4 class="mb-0"> <%= purchases_QTY.totalQuantity.toLocaleString() %>  Qty</h4>
                                                        <% } else { %>
                                                                
                                                            <h4 class="mb-0"> <%= purchases_QTY.totalQuantity.toLocaleString() %>  Qty</h4>
                                                        <% } %>

                                                    <% } %>

                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-xl-3 col-xxl-6 col-lg-6 col-sm-6">
                                    <div class="widget-stat card">
                                        <div class="card-body p-4">
                                            <div class="media ai-icon">
                                                <span class="me-3 bgl-success text-success">
                                                    <i class="las la-share"></i>
                                                </span>



                                                <div class="media-body">
                                                    <p class="mb-1"><%= language.purchase_return %></p>

                                                    <% if( purchases_return == undefined ) { %>

                                                        <% if(master_shop[0].currency_placement == 1) { %>
    
                                                            <h4 class="mb-0"> 0 Qty </h4>
                                                        <% } else { %>
                                                                
                                                            <h4 class="mb-0"> 0 Qty </h4>
                                                        <% } %>

                                                    <% } else { %>
                                                                
                                                        <% if(master_shop[0].currency_placement == 1) { %>
    
                                                            <h4 class="mb-0"> <%= purchases_return_QTY.totalQuantity.toLocaleString() %> Qty</h4>
                                                        <% } else { %>
                                                                
                                                            <h4 class="mb-0"> <%= purchases_return_QTY.totalQuantity.toLocaleString() %> Qty</h4>
                                                        <% } %>

                                                    <% } %>

                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div> -->


                                <div class="col-lg-3">
                                    <div class="card">
                                        <div class="card-header">
                                            <h4 class="card-title">Incoming</h4>
                                        </div>
                                        <div class="card-body">
                                            <div class="table-responsive">
                                                <canvas id="myLineChart" width="400" height="400"></canvas>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-lg-3">
                                    <div class="card">
                                        <div class="card-header">
                                            <h4 class="card-title">Outgoing</h4>
                                        </div>
                                        <div class="card-body">
                                            <div class="table-responsive">
                                                <canvas id="myLineChart1" width="400" height="400"></canvas>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                 <div class="col-lg-3">
                                    <div class="card">
                                        <div class="card-header">
                                            <h4 class="card-title">Adjustment</h4>
                                        </div>
                                        <div class="card-body">
                                            <div class="table-responsive">
                                                <canvas id="myLineChart2" width="400" height="400"></canvas>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-lg-3">
                                    <div class="card">
                                        <div class="card-header">
                                            <h4 class="card-title">Transfer</h4>
                                        </div>
                                        <div class="card-body">
                                            <div class="table-responsive">
                                                <canvas id="myLineChart3" width="400" height="400"></canvas>
                                            </div>
                                        </div>
                                    </div>
                                </div>


                                <!-- <div class="col-xl-3 col-xxl-6 col-lg-6 col-sm-6">
                                    <div class="widget-stat card bg-danger">
                                        <div class="card-body  p-4">
                                            <div class="media">
                                                <span class="me-3">
                                                    <i class="lab la-buffer"></i>
                                                </span>
                                                <div class="media-body text-white text-end">
                                                    <p class="mb-1"><%= language.categories %></p>
                                                    <h3 class="text-white"><%= categories %></h3>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="col-xl-3 col-xxl-6 col-lg-6 col-sm-6">
                                    <div class="widget-stat card bg-success">
                                        <div class="card-body p-4">
                                            <div class="media">
                                                <span class="me-3">
                                                    <i class="lab la-product-hunt"></i>
                                                </span>
                                                <div class="media-body text-white text-end">
                                                    <p class="mb-1"><%= language.products %></p>
                                                    <h3 class="text-white"><%= product %></h3>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-xl-3 col-xxl-6 col-lg-6 col-sm-6">
                                    <div class="widget-stat card bg-primary">
                                        <div class="card-body p-4">
                                            <div class="media">
                                                <span class="me-3">
                                                    <svg width="30" height="30" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                        <g> 
                                                          <g> 
                                                            <path fill-rule="evenodd" clip-rule="evenodd" d="M9.55851 21.4562C5.88651 21.4562 2.74951 20.9012 2.74951 18.6772C2.74951 16.4532 5.86651 14.4492 9.55851 14.4492C13.2305 14.4492 16.3665 16.4342 16.3665 18.6572C16.3665 20.8802 13.2505 21.4562 9.55851 21.4562Z" stroke="#FFFFFF" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                                                            <path fill-rule="evenodd" clip-rule="evenodd" d="M9.55849 11.2776C11.9685 11.2776 13.9225 9.32356 13.9225 6.91356C13.9225 4.50356 11.9685 2.54956 9.55849 2.54956C7.14849 2.54956 5.19449 4.50356 5.19449 6.91356C5.18549 9.31556 7.12649 11.2696 9.52749 11.2776H9.55849Z" stroke="#FFFFFF" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                                                            <path d="M16.8013 10.0789C18.2043 9.70388 19.2383 8.42488 19.2383 6.90288C19.2393 5.31488 18.1123 3.98888 16.6143 3.68188" stroke="#FFFFFF" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                                                            <path d="M17.4608 13.6536C19.4488 13.6536 21.1468 15.0016 21.1468 16.2046C21.1468 16.9136 20.5618 17.6416 19.6718 17.8506" stroke="#FFFFFF" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                                                          </g>
                                                        </g>
                                                    </svg>
                                                </span>
                                                <div class="media-body text-white text-end">
                                                    <p class="mb-1"><%= language.supplier %></p>
                                                    <h3 class="text-white"><%= suppliers %></h3>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-xl-3 col-xxl-6 col-lg-6 col-sm-6">
                                    <div class="widget-stat card bg-warning">
                                        <div class="card-body p-4">
                                            <div class="media">
                                                <span class="me-3">
                                                    <svg width="30" height="30" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                                                        <g> 
                                                          <g> 
                                                            <path fill-rule="evenodd" clip-rule="evenodd" d="M11.9724 20.3683C8.73343 20.3683 5.96643 19.8783 5.96643 17.9163C5.96643 15.9543 8.71543 14.2463 11.9724 14.2463C15.2114 14.2463 17.9784 15.9383 17.9784 17.8993C17.9784 19.8603 15.2294 20.3683 11.9724 20.3683Z" stroke="#FFFFFF" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                                                            <path fill-rule="evenodd" clip-rule="evenodd" d="M11.9725 11.4488C14.0985 11.4488 15.8225 9.72576 15.8225 7.59976C15.8225 5.47376 14.0985 3.74976 11.9725 3.74976C9.84645 3.74976 8.12245 5.47376 8.12245 7.59976C8.11645 9.71776 9.82645 11.4418 11.9455 11.4488H11.9725Z" stroke="#FFFFFF" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                                                            <path d="M18.3622 10.3915C19.5992 10.0605 20.5112 8.93254 20.5112 7.58954C20.5112 6.18854 19.5182 5.01854 18.1962 4.74854" stroke="#FFFFFF" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                                                            <path d="M18.9431 13.5444C20.6971 13.5444 22.1951 14.7334 22.1951 15.7954C22.1951 16.4204 21.6781 17.1014 20.8941 17.2854" stroke="#FFFFFF" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                                                            <path d="M5.58372 10.3915C4.34572 10.0605 3.43372 8.93254 3.43372 7.58954C3.43372 6.18854 4.42772 5.01854 5.74872 4.74854" stroke="#FFFFFF" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                                                            <path d="M5.00176 13.5444C3.24776 13.5444 1.74976 14.7334 1.74976 15.7954C1.74976 16.4204 2.26676 17.1014 3.05176 17.2854" stroke="#FFFFFF" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path>
                                                          </g>
                                                        </g>
                                                      </svg>
                                                </span>
                                                <div class="media-body text-white text-end">
                                                    <p class="mb-1"><%= language.customer %></p>
                                                    <h3 class="text-white"><%= customer %></h3>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div> -->

                            </div>

                        </div>



                        <div class="container-fluid">
                            <div class="card">
                                <div class="card-header">
                                    <h4 class="card-title">Finished Goods</h4>
                                </div>
                            </div>
                            <div class="row">



                                <div class="col-lg-3">
                                    <div class="card">
                                        <div class="card-header">
                                            <h4 class="card-title">Incoming</h4>
                                        </div>
                                        <div class="card-body">
                                            <div class="table-responsive">
                                                <canvas id="myLineChartFG" width="400" height="400"></canvas>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-lg-3">
                                    <div class="card">
                                        <div class="card-header">
                                            <h4 class="card-title">Outgoing</h4>
                                        </div>
                                        <div class="card-body">
                                            <div class="table-responsive">
                                                <canvas id="myLineChart1FG" width="400" height="400"></canvas>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                 <div class="col-lg-3">
                                    <div class="card">
                                        <div class="card-header">
                                            <h4 class="card-title">Adjustment</h4>
                                        </div>
                                        <div class="card-body">
                                            <div class="table-responsive">
                                                <canvas id="myLineChart2FG" width="400" height="400"></canvas>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-lg-3">
                                    <div class="card">
                                        <div class="card-header">
                                            <h4 class="card-title">Transfer</h4>
                                        </div>
                                        <div class="card-body">
                                            <div class="table-responsive">
                                                <canvas id="myLineChart3FG" width="400" height="400"></canvas>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>




                    <!--**********************************
            Footer start
        ***********************************-->
                    <%- include('./partials/footer'); -%>

                        <!--**********************************
            Footer end
        ***********************************-->

    </div>
    <!--**********************************
        Main wrapper end
    ***********************************-->

      <!-- start Toastr -->
      <%- include('./partials/toastr'); -%>
      <!-- End Toastr -->

    <!--**********************************
        Scripts
    ***********************************-->
    <%- include('./partials/script'); -%>.

    <script src="../public/js/moment.js"></script>
        <script>
            // Get the context of the canvas element we want to select
            var ctx = document.getElementById('myLineChart').getContext('2d');
            var ctx1 = document.getElementById('myLineChart1').getContext('2d');
            var ctx2 = document.getElementById('myLineChart2').getContext('2d');
            var ctx3 = document.getElementById('myLineChart3').getContext('2d');

            var ctxFG = document.getElementById('myLineChartFG').getContext('2d');
            var ctx1FG = document.getElementById('myLineChart1FG').getContext('2d');
            var ctx2FG = document.getElementById('myLineChart2FG').getContext('2d');
            var ctx3FG = document.getElementById('myLineChart3FG').getContext('2d');
            
            //Raw Material
            function fetchData() {
                // Make an AJAX request
                console.log("1")
                $.ajax({
                    url: './raw_line', // Replace 'your_data_endpoint_url_here' with your actual data endpoint URL
                    type: 'GET',
                    dataType: 'json',
                    success: function(response) {
                        // On success, update chart with fetched data
                        // console.log(response)
                        updateChart(response);
                    },
                    error: function(xhr, status, error) {
                        console.error(error);
                    }
                });
            }
            function fetchDataOut() {
                // Make an AJAX request
                $.ajax({
                    url: './raw_out_line', // Replace 'your_data_endpoint_url_here' with your actual data endpoint URL
                    type: 'GET',
                    dataType: 'json',
                    success: function(response) {
                        // On success, update chart with fetched data
                        // console.log(response)
                        updateChartOut(response);
                    },
                    error: function(xhr, status, error) {
                        console.error(error);
                    }
                });
            }
            function fetchDataADJ() {
                // Make an AJAX request
                $.ajax({
                    url: './raw_adj_line', // Replace 'your_data_endpoint_url_here' with your actual data endpoint URL
                    type: 'GET',
                    dataType: 'json',
                    success: function(response) {
                        // On success, update chart with fetched data
                        // console.log(response)
                        updateChartADJ(response);
                    },
                    error: function(xhr, status, error) {
                        console.error(error);
                    }
                });
            }
            function fetchDataTF() {
                // Make an AJAX request
                $.ajax({
                    url: './raw_trf_line', // Replace 'your_data_endpoint_url_here' with your actual data endpoint URL
                    type: 'GET',
                    dataType: 'json',
                    success: function(response) {
                        // On success, update chart with fetched data
                        // console.log(response)
                        updateChartTRF(response);
                    },
                    error: function(xhr, status, error) {
                        console.error(error);
                    }
                });
            }


            function updateChart(data) {
                var labels = [];
                var quantities = [];

                // Extract labels and quantities from fetched data
                data.forEach(function(item) {
                    
                    var dob = new Date(item.date);
                    var dobArr = dob.toDateString().split(' ');
                    var dobFormat = dobArr[2] + ' ' + dobArr[1] + ' ' + dobArr[3];
                    // alert(dobFormat); 
                    labels.push(dobFormat);
                    quantities.push(item.totalQuantity);
                });

                // Update chart data with fetched data
                myLineChart.data.labels = labels;
                myLineChart.data.datasets[0].data = quantities;

                // Update the chart
                myLineChart.update();
            }
            function updateChartOut(data) {
                var labels = [];
                var quantities = [];

                // Extract labels and quantities from fetched data
                data.forEach(function(item) {
                    
                    var dob = new Date(item.date);
                    var dobArr = dob.toDateString().split(' ');
                    var dobFormat = dobArr[2] + ' ' + dobArr[1] + ' ' + dobArr[3];
                    // alert(dobFormat); 
                    labels.push(dobFormat);
                    quantities.push(item.totalQuantity);
                });

                // Update chart data with fetched data
                myLineChart1.data.labels = labels;
                myLineChart1.data.datasets[0].data = quantities;

                // Update the chart
                myLineChart1.update();
            }
            function updateChartADJ(data) {
                var labels = [];
                var quantities = [];

                // Extract labels and quantities from fetched data
                data.forEach(function(item) {
                    
                    var dob = new Date(item.date);
                    var dobArr = dob.toDateString().split(' ');
                    var dobFormat = dobArr[2] + ' ' + dobArr[1] + ' ' + dobArr[3];
                    // alert(dobFormat); 
                    labels.push(dobFormat);
                    quantities.push(item.totalQuantity);
                });

                // Update chart data with fetched data
                myLineChart2.data.labels = labels;
                myLineChart2.data.datasets[0].data = quantities;

                // Update the chart
                myLineChart2.update();
            }
            function updateChartTRF(data) {
                var labels = [];
                var quantities = [];

                // Extract labels and quantities from fetched data
                data.forEach(function(item) {
                    
                    var dob = new Date(item.date);
                    var dobArr = dob.toDateString().split(' ');
                    var dobFormat = dobArr[2] + ' ' + dobArr[1] + ' ' + dobArr[3];
                    // alert(dobFormat); 
                    labels.push(dobFormat);
                    quantities.push(item.totalQuantity);
                });

                // Update chart data with fetched data
                myLineChart3.data.labels = labels;
                myLineChart3.data.datasets[0].data = quantities;

                // Update the chart
                myLineChart3.update();
            }


            fetchData();
            fetchDataOut();
            fetchDataADJ();
            fetchDataTF();
            var options = {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                },
                title: {
                    display: true,
                    text: 'Chart.js Line Chart'
                }
            };


            var myLineChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: [],
                    datasets: [{
                        label: 'Total Quantity',
                        backgroundColor: 'rgb(255, 99, 132)',
                        borderColor: 'rgb(255, 99, 132)',
                        data: [],
                        fill: false,
                        pointStyle: 'rectRot',
                        pointRadius: 5,
                        pointBorderColor: 'rgb(0, 0, 0)',
                        borderWidth: 1,
                    }]
                },
                options: options
            });


            var myLineChart1 = new Chart(ctx1, {
                type: 'line',
                data: {
                    labels: [],
                    datasets: [{
                        label: 'Total Quantity',
                        backgroundColor: 'rgb(173, 216, 230)',
                        borderColor: 'rgb(173, 216, 230)',
                        data: [],
                        fill: false,
                        pointStyle: 'rectRot',
                        pointRadius: 5,
                        pointBorderColor: 'rgb(0, 0, 0)',
                        borderWidth: 1,
                    }]
                },
                options: options
            });

            var myLineChart2 = new Chart(ctx2, {
                type: 'line',
                data: {
                    labels: [],
                    datasets: [{
                        label: 'Total Quantity - ',
                        backgroundColor: 'rgb(144, 238, 144)',
                        borderColor: 'rgb(144, 238, 144)',
                        data: [],
                        fill: false,
                        pointStyle: 'rectRot',
                        pointRadius: 5,
                        pointBorderColor: 'rgb(0, 0, 0)',
                        borderWidth: 1,
                    }]
                },
                options: options
            });

            var myLineChart3 = new Chart(ctx3, {
                type: 'line',
                data: {
                    labels: [],
                    datasets: [{
                        label: 'Total Quantity - ',
                        backgroundColor: 'rgb(211, 211, 211)',
                        borderColor: 'rgb(211, 211, 211)',
                        data: [],
                        fill: false,
                        pointStyle: 'rectRot',
                        pointRadius: 5,
                        pointBorderColor: 'rgb(0, 0, 0)',
                        borderWidth: 1,
                    }]
                },
                options: options
            });
      
      
            //Finished Goods

            function fetchDataFG() {
                // Make an AJAX request
                $.ajax({
                    url: './fg_line', // Replace 'your_data_endpoint_url_here' with your actual data endpoint URL
                    type: 'GET',
                    dataType: 'json',
                    success: function(response) {
                        // On success, update chart with fetched data
                        // console.log(response)
                        updateChartFG(response);
                    },
                    error: function(xhr, status, error) {
                        console.error(error);
                    }
                });
            }
            function fetchDataOutFG() {
                // Make an AJAX request
                $.ajax({
                    url: './fg_out_line', // Replace 'your_data_endpoint_url_here' with your actual data endpoint URL
                    type: 'GET',
                    dataType: 'json',
                    success: function(response) {
                        // On success, update chart with fetched data
                        // console.log(response)
                        updateChartOutFG(response);
                    },
                    error: function(xhr, status, error) {
                        console.error(error);
                    }
                });
            }
            function fetchDataADJFG() {
                // Make an AJAX request
                $.ajax({
                    url: './fg_adj_line', // Replace 'your_data_endpoint_url_here' with your actual data endpoint URL
                    type: 'GET',
                    dataType: 'json',
                    success: function(response) {
                        // On success, update chart with fetched data
                        // console.log(response)
                        updateChartADJFG(response);
                    },
                    error: function(xhr, status, error) {
                        console.error(error);
                    }
                });
            }
            function fetchDataTFGJFG() {
                // Make an AJAX request
                $.ajax({
                    url: './fg_trf_line', // Replace 'your_data_endpoint_url_here' with your actual data endpoint URL
                    type: 'GET',
                    dataType: 'json',
                    success: function(response) {
                        // On success, update chart with fetched data
                        // console.log(response)
                        updateChartTRFFG(response);
                    },
                    error: function(xhr, status, error) {
                        console.error(error);
                    }
                });
            }


            function updateChartFG(data) {
                var labels = [];
                var quantities = [];

                // Extract labels and quantities from fetched data
                data.forEach(function(item) {
                    
                    var dob = new Date(item.date);
                    var dobArr = dob.toDateString().split(' ');
                    var dobFormat = dobArr[2] + ' ' + dobArr[1] + ' ' + dobArr[3];
                    // alert(dobFormat); 
                    labels.push(dobFormat);
                    quantities.push(item.totalQuantity);
                });

                // Update chart data with fetched data
                myLineChartFG.data.labels = labels;
                myLineChartFG.data.datasets[0].data = quantities;

                // Update the chart
                myLineChartFG.update();
            }
            function updateChartOutFG(data) {
                var labels = [];
                var quantities = [];

                // Extract labels and quantities from fetched data
                data.forEach(function(item) {
                    
                    var dob = new Date(item.date);
                    var dobArr = dob.toDateString().split(' ');
                    var dobFormat = dobArr[2] + ' ' + dobArr[1] + ' ' + dobArr[3];
                    // alert(dobFormat); 
                    labels.push(dobFormat);
                    quantities.push(item.totalQuantity);
                });

                // Update chart data with fetched data
                myLineChart1FG.data.labels = labels;
                myLineChart1FG.data.datasets[0].data = quantities;

                // Update the chart
                myLineChart1FG.update();
            }
            function updateChartADJFG(data) {
                var labels = [];
                var quantities = [];

                // Extract labels and quantities from fetched data
                data.forEach(function(item) {
                    
                    var dob = new Date(item.date);
                    var dobArr = dob.toDateString().split(' ');
                    var dobFormat = dobArr[2] + ' ' + dobArr[1] + ' ' + dobArr[3];
                    // alert(dobFormat); 
                    labels.push(dobFormat);
                    quantities.push(item.totalQuantity);
                });

                // Update chart data with fetched data
                myLineChart2FG.data.labels = labels;
                myLineChart2FG.data.datasets[0].data = quantities;

                // Update the chart
                myLineChart2FG.update();
            }
            function updateChartTRFFG(data) {
                var labels = [];
                var quantities = [];

                // Extract labels and quantities from fetched data
                data.forEach(function(item) {
                    
                    var dob = new Date(item.date);
                    var dobArr = dob.toDateString().split(' ');
                    var dobFormat = dobArr[2] + ' ' + dobArr[1] + ' ' + dobArr[3];
                    // alert(dobFormat); 
                    labels.push(dobFormat);
                    quantities.push(item.totalQuantity);
                });

                // Update chart data with fetched data
                myLineChart3FG.data.labels = labels;
                myLineChart3FG.data.datasets[0].data = quantities;

                // Update the chart
                myLineChart3FG.update();
            }

            
            var options1 = {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                },
                title: {
                    display: true,
                    text: 'Chart.js Line Chart'
                }
            };

            var myLineChartFG = new Chart(ctxFG, {
                type: 'line',
                data: {
                    labels: [],
                    datasets: [{
                        label: 'Total Quantity',
                        backgroundColor: 'rgb(255, 99, 132)',
                        borderColor: 'rgb(255, 99, 132)',
                        data: [],
                        fill: false,
                        pointStyle: 'rectRot',
                        pointRadius: 5,
                        pointBorderColor: 'rgb(0, 0, 0)',
                        borderWidth: 1,
                    }]
                },
                options: options1
            });
            var myLineChart1FG = new Chart(ctx1FG, {
                type: 'line',
                data: {
                    labels: [],
                    datasets: [{
                        label: 'Total Quantity',
                        backgroundColor: 'rgb(173, 216, 230)',
                        borderColor: 'rgb(173, 216, 230)',
                        data: [],
                        fill: false,
                        pointStyle: 'rectRot',
                        pointRadius: 5,
                        pointBorderColor: 'rgb(0, 0, 0)',
                        borderWidth: 1,
                    }]
                },
                options: options1
            });
            var myLineChart2FG = new Chart(ctx2FG, {
                type: 'line',
                data: {
                    labels: [],
                    datasets: [{
                        label: 'Total Quantity - ',
                        backgroundColor: 'rgb(144, 238, 144)',
                        borderColor: 'rgb(144, 238, 144)',
                        data: [],
                        fill: false,
                        pointStyle: 'rectRot',
                        pointRadius: 5,
                        pointBorderColor: 'rgb(0, 0, 0)',
                        borderWidth: 1,
                    }]
                },
                options: options1
            });
            var myLineChart3FG = new Chart(ctx3FG, {
                type: 'line',
                data: {
                    labels: [],
                    datasets: [{
                        label: 'Total Quantity - ',
                        backgroundColor: 'rgb(211, 211, 211)',
                        borderColor: 'rgb(211, 211, 211)',
                        data: [],
                        fill: false,
                        pointStyle: 'rectRot',
                        pointRadius: 5,
                        pointBorderColor: 'rgb(0, 0, 0)',
                        borderWidth: 1,
                    }]
                },
                options: options
            });
      
            fetchDataFG();
            fetchDataOutFG();
            fetchDataADJFG();
            fetchDataTFGJFG();




            async function fetchDataAndUpdateChart(fetchFunction, chart) {
                const newData = await fetchFunction(); // Fetch data using the provided fetchFunction
                // chart.data = newData;
                // chart.update(); // Update the chart with the new data
                await fetchFunction(); 
            }


            function startDataRefresh() {
                const pollingInterval = 1000;
                // Call fetchDataAndUpdateChart for each data source and its corresponding chart
                setInterval(() => fetchDataAndUpdateChart(fetchData, ctx), pollingInterval);
                setInterval(() => fetchDataAndUpdateChart(fetchDataOut, ctx1), pollingInterval);
                setInterval(() => fetchDataAndUpdateChart(fetchDataADJ, ctx2), pollingInterval);
                setInterval(() => fetchDataAndUpdateChart(fetchDataTF, ctx3), pollingInterval);

                setInterval(() => fetchDataAndUpdateChart(fetchDataFG, ctxFG), pollingInterval);
                setInterval(() => fetchDataAndUpdateChart(fetchDataOutFG, ctx1FG), pollingInterval);
                setInterval(() => fetchDataAndUpdateChart(fetchDataADJFG, ctx2FG), pollingInterval);
                setInterval(() => fetchDataAndUpdateChart(fetchDataTFGJFG, ctx3FG), pollingInterval);
            }

            startDataRefresh();
      </script>

        <!--**********************************
        Scripts end
    ***********************************-->
</body>

</html>